{
  "request": {
    "duration": 60,
    "name": "error-lua-parse-failure",
    "qps": {
      "ConstantRate": {
        "countPerSec": 2
      }
    },
    "req": {
      "RequestList": {
        "data": [
          {
            "method": "GET",
            "url": "/get",
            "headers": {
              "Host": "127.0.0.1:2080",
              "Connection":"keep-alive"
            }
          }
        ]
      }
    },
    "target": {
      "host": "100.117.200.126",
      "port": 80,
      "protocol": "HTTP"
    },
    "concurrentConnection": {
      "ConstantRate": {
        "countPerSec": 1
      }
    },
    "responseAssertion": {
      "luaAssertion": [
        "function x(method, url, reqBody, respBody)",
        "result ={}",
        "print('inside lua')",
        "if method~='POST' then",
        "local err={}",
        "err.id=1",
        "err.success=false",
        "err.error='Invalid method'",
        "table.insert(result,err)",
        "end",
        "jsonReq=json.decode(reqBody)",
        "jsonResp=json.decode(respBody)",
        "if jsonResp.json.firstName == nil then",
        "local err={}",
        "err.id=2",
        "err.success=false",
        "err.error='firstName not found'",
        "table.insert(result,err)",
        "end",
        "if jsonResp.json..age == nil then",
        "local err={}",
        "err.id=3",
        "err.success=false",
        "err.error='age not found'",
        "table.insert(result,err)",
        "elseif jsonResp.json.age > 20 or jsonResp.json.age < 10 then",
        "local err={}",
        "err.id=4",
        "err.success=false",
        "err.error='age out of range: '..jsonResp.json.age",
        "table.insert(result,err)",
        "end",
        "return result",
        "end"
      ]
    }
  },
  "expectation": {
    "errorContains": "LuaParseFailure"
  }
}